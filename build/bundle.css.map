{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../HowTo.svelte",
    "../../ProgressBar.svelte",
    "../../Timer.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import Timer from './components/Timer.svelte';\n    import HowTo from './components/HowTo.svelte';\n    let audio;\n    function timerEnds(e) {\n        audio.play();\n    }\n</script>\n<style>\n    h1, h3 {\n        text-align: center;\n    }\n</style>\n<h1>Handwashing</h1>\n<Timer on:end={timerEnds}/>\n<HowTo />\n<h3>\n    <a href=\"https://www.who.int/gpsc/clean_hands_protection/en/\">Picture Source</a>\n    <a href=\"https://freesound.org/people/metrostock99/sounds/345086/\">Sound Source</a>\n</h3>\n\n<audio bind:this={audio}>\n    <source src=\"sound.wav\" />\n</audio>",
    "<style>\n    img {\n        width: 100%;\n    }\n</style>\n<div bp=\"grid\">\n    <img bp=\"offset-5@md 4@md 12@sm\" src=\"./handwashing.gif\" alt=\"How to wash your hands.\"/>\n</div>  ",
    "<script>\n    export let progress = 20;\n</script>\n<style>\n    .progress-container {\n        margin: 20px 0;\n        border: solid rgb(194, 194, 194) 1px;\n    }\n    .progressbar {\n        height: 30px;\n        background-color: rgb(77, 199, 55)\n    }\n</style>\n<div bp=\"grid\">\n    <div bp=\"offset-5@md 4@md 12@sm\" class=\"progress-container\">\n        <div class=\"progressbar\" style=\"width: {progress}%;\">\n            <span class=\"sr-only\">%{progress}</span>\n        </div>\n    </div>\n</div>",
    "<script>\n  import {createEventDispatcher} from 'svelte';\n  import ProgressBar from \"./ProgressBar.svelte\";\n  const totalSeconds = 20;\n  let secondsleft = totalSeconds;\n  let isRunning = false;\n  $: progress = ((totalSeconds - secondsleft) / totalSeconds * 100);\n  const dispatch = createEventDispatcher();\n  function startTimer() {\n      isRunning = true;\n    const timer = setInterval(() => {\n      secondsleft -= 1;\n      if (secondsleft == 0) {\n        clearInterval(timer);\n        isRunning = false;\n        secondsleft = totalSeconds;\n        dispatch('end');\n      }\n    }, 1000);\n  }\n</script>\n\n<style>\n  h2 {\n    margin: 0;\n  }\n  .start {\n    background-color: rgb(154, 73, 73);\n    width: 100%;\n    margin: 10px 0;\n  }\n  .start[disabled]{\n      background-color: gray;\n      cursor: not-allowed;\n  }\n</style>\n\n<div bp=\"grid\">\n  <h2 bp=\"offset-5@md 4@md 12@sm\">Seconds left: {secondsleft}</h2>\n</div>\n<ProgressBar {progress}/>\n<div bp=\"grid\">\n  <button bp=\"offset-5@md 4@md 12@sm\" class=\"start\" disabled={isRunning} on:click={startTimer}>Start</button>\n</div>\n"
  ],
  "names": [],
  "mappings": "AASI,iBAAE,CAAE,EAAE,eAAC,CAAC,AACJ,UAAU,CAAE,MAAM,AACtB,CAAC;ACVD,GAAG,aAAC,CAAC,AACD,KAAK,CAAE,IAAI,AACf,CAAC;ACCD,mBAAmB,eAAC,CAAC,AACjB,MAAM,CAAE,IAAI,CAAC,CAAC,CACd,MAAM,CAAE,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,AACxC,CAAC,AACD,YAAY,eAAC,CAAC,AACV,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;IACtC,CAAC;ACYH,EAAE,eAAC,CAAC,AACF,MAAM,CAAE,CAAC,AACX,CAAC,AACD,MAAM,eAAC,CAAC,AACN,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAClC,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CAAC,CAAC,AAChB,CAAC,AACD,MAAM,CAAC,QAAQ,gBAAC,CAAC,AACb,gBAAgB,CAAE,IAAI,CACtB,MAAM,CAAE,WAAW,AACvB,CAAC"
}